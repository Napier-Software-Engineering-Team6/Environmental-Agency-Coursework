name: Build & Test Workflow

on: [pull_request]

jobs:
 build:
  runs-on: windows-latest

  steps:
   - name: Checkout code
     uses: actions/checkout@v4

   # Test database
   - name: Download SqlServer
     uses: potatoqualitee/mssqlsuite@v1.7
     with:
      install: sqlengine, sqlpackage

   - name: Run sqlclient
     run: |
      sqlcmd -S localhost -U sa -P dbatools.I0 -Q "CREATE DATABASE TestDb;"
      sqlcmd -S localhost -U sa -P dbatools.I0 -d TestDb -Q "SELECT @@version;"

   - name: Setup .NET
     uses: actions/setup-dotnet@v4
     with:
      dotnet-version: 8.0

   - name: Restore workloads
     run: dotnet workload restore ${{ vars.CSPROJ_PATH }}

   - name: Restore dependencies
     run: dotnet restore ${{ vars.CSPROJ_PATH }}

   # Command-line tools from .net

   - name: Install Tools
     run: dotnet tool install --global dotnet-coverage

   # Setup JAVA SDK
   - name: Set up JDK 17
     uses: actions/setup-java@v4
     with:
      java-version: 17
      distribution: "zulu"

   # Get SonarCloud dependencies from cache
   - name: Cache SonarCloud packages
     uses: actions/cache@v4
     with:
      path: ~/sonar/cache
      key: ${{ runner.os }}-sonar
      restore-keys: ${{ runner.os }}-sonar

   # Get the SonarCloud scanner from cache
   - name: Cache SonarCloud scanner
     id: cache-sonar-scanner
     uses: actions/cache@v4
     with:
      path: ./.sonar/scanner
      key: ${{ runner.os }}-sonar-scanner
      restore-keys: ${{ runner.os }}-sonar-scanner

   # Install SonarCloud scanner
   - name: Install SonarCloud scanner
     if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
     run: |
      mkdir -p .sonar/scanner
      dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
      echo "$(Resolve-Path ./.sonar/scanner)" >> $env:GITHUB_PATH

   - name: Start Sonar Analysis
     env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
     run: |
      ./.sonar/scanner/dotnet-sonarscanner begin /k:"Napier-Software-Engineering-Team6_Environmental-Agency-Coursework" /o:"napier-software-engineering-team6" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.scanner.scanAll=false /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
   - name: Build project
     env:
      ConnectionStrings__TestConnection: ${{ secrets.TestConnection_CONNECTION_STRING }}
     run: dotnet build ${{ vars.CSPROJ_PATH }} --framework net8.0

   - name: Test
     env:
      ConnectionStrings__TestConnection: ${{ secrets.TestConnection_CONNECTION_STRING }}
     run: dotnet-coverage collect "dotnet test ./CourseworkApp.sln --framework net8.0" -f xml -o "coverage.xml"

   - name: End Sonar Analysis
     env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
     run: ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN}}"
