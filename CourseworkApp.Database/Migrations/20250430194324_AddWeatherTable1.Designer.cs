// <auto-generated />
using System;
using CourseworkApp.Database.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseworkApp.Database.Migrations
{
    [DbContext(typeof(WeatherDbContext))]
    [Migration("20250430194324_AddWeatherTable1")]
    partial class AddWeatherTable1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseworkApp.Database.Models.WeatherSensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Relative_Humidity_2m")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Temperature_2m")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Wind_Direction_10m")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("Wind_Speed_10m")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("weather");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2025, 4, 28, 20, 43, 24, 169, DateTimeKind.Local).AddTicks(3937),
                            Name = "Default Sensor",
                            Relative_Humidity_2m = 65.0m,
                            StartDate = new DateTime(2025, 4, 27, 20, 43, 24, 169, DateTimeKind.Local).AddTicks(3934),
                            Temperature_2m = 18.5m,
                            Time = new DateTime(2025, 4, 27, 20, 43, 24, 169, DateTimeKind.Local).AddTicks(3878),
                            Wind_Direction_10m = 45.0m,
                            Wind_Speed_10m = 12.3m
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2025, 4, 29, 20, 43, 24, 169, DateTimeKind.Local).AddTicks(4021),
                            Name = "Backup Sensor",
                            Relative_Humidity_2m = 70.0m,
                            StartDate = new DateTime(2025, 4, 28, 20, 43, 24, 169, DateTimeKind.Local).AddTicks(4013),
                            Temperature_2m = 20.1m,
                            Time = new DateTime(2025, 4, 28, 20, 43, 24, 169, DateTimeKind.Local).AddTicks(3941),
                            Wind_Direction_10m = 90.0m,
                            Wind_Speed_10m = 15.0m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
