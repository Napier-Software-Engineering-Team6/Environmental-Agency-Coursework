// <auto-generated />
using System;
using CourseworkApp.Database.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseworkApp.Database.Migrations
{
    [DbContext(typeof(WeatherDbContext))]
    partial class WeatherDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseworkApp.Database.Models.WeatherSensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Relative_Humidity_2m")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Temperature_2m")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Wind_Direction_10m")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("Wind_Speed_10m")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("weather");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2025, 4, 29, 15, 22, 37, 465, DateTimeKind.Local).AddTicks(3109),
                            Name = "Default Sensor",
                            Relative_Humidity_2m = 65.0m,
                            StartDate = new DateTime(2025, 4, 28, 15, 22, 37, 465, DateTimeKind.Local).AddTicks(3106),
                            Temperature_2m = 18.5m,
                            Time = new DateTime(2025, 4, 28, 15, 22, 37, 465, DateTimeKind.Local).AddTicks(3042),
                            Wind_Direction_10m = 45.0m,
                            Wind_Speed_10m = 12.3m
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2025, 4, 30, 15, 22, 37, 465, DateTimeKind.Local).AddTicks(3120),
                            Name = "Backup Sensor",
                            Relative_Humidity_2m = 70.0m,
                            StartDate = new DateTime(2025, 4, 29, 15, 22, 37, 465, DateTimeKind.Local).AddTicks(3118),
                            Temperature_2m = 20.1m,
                            Time = new DateTime(2025, 4, 29, 15, 22, 37, 465, DateTimeKind.Local).AddTicks(3112),
                            Wind_Direction_10m = 90.0m,
                            Wind_Speed_10m = 15.0m
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2025, 4, 21, 15, 22, 37, 465, DateTimeKind.Local).AddTicks(3129),
                            Name = "Default Sensor",
                            Relative_Humidity_2m = 64.0m,
                            StartDate = new DateTime(2025, 4, 26, 15, 22, 37, 465, DateTimeKind.Local).AddTicks(3128),
                            Temperature_2m = 11.5m,
                            Time = new DateTime(2025, 4, 28, 15, 22, 37, 465, DateTimeKind.Local).AddTicks(3123),
                            Wind_Direction_10m = 44.0m,
                            Wind_Speed_10m = 11.1m
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2025, 4, 29, 15, 22, 37, 465, DateTimeKind.Local).AddTicks(3136),
                            Name = "Default Sensor",
                            Relative_Humidity_2m = 65.0m,
                            StartDate = new DateTime(2025, 4, 28, 15, 22, 37, 465, DateTimeKind.Local).AddTicks(3134),
                            Temperature_2m = 15.5m,
                            Time = new DateTime(2025, 4, 28, 15, 22, 37, 465, DateTimeKind.Local).AddTicks(3131),
                            Wind_Direction_10m = 47.0m,
                            Wind_Speed_10m = 10.3m
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateTime(2025, 4, 30, 15, 22, 37, 465, DateTimeKind.Local).AddTicks(3142),
                            Name = "Default Sensor",
                            Relative_Humidity_2m = 60.0m,
                            StartDate = new DateTime(2025, 4, 30, 15, 22, 37, 465, DateTimeKind.Local).AddTicks(3141),
                            Temperature_2m = 17.5m,
                            Time = new DateTime(2025, 4, 24, 15, 22, 37, 465, DateTimeKind.Local).AddTicks(3138),
                            Wind_Direction_10m = 45.0m,
                            Wind_Speed_10m = 10.3m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
